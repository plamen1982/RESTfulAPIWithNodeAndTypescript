{"version":3,"file":"/home/plamen/Trainings/ExpressAndTypescript/test/hero.test.ts","sources":["/home/plamen/Trainings/ExpressAndTypescript/test/hero.test.ts"],"names":[],"mappings":";AACA,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,MAAO,QAAQ,WAAW,WAAW,CAAC,CAAC;AAEvC,sBAAgB,YAAY,CAAC,CAAA;AAE7B,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAEnB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,QAAQ,CAAC,mBAAmB,EAAE;IAC3B,EAAE,CAAC,0BAA0B,EAAE;QAC1B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC;aAClD,IAAI,CAAC,GAAG;YACA,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACjC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YACvB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;IACN,EAAE,CAAC,6BAA6B,EAAE;QAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC;aAC7C,IAAI,CAAC,GAAG;YACD,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAI,WAAW,CAAC,CAAA;YAC/D,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;gBAC/B,IAAI;gBACJ,MAAM;gBACN,SAAS;gBACT,QAAQ;gBACR,QAAQ;gBACR,MAAM;gBACN,MAAM;gBACN,QAAQ;aACX,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import * as mocha from 'mocha';\nimport * as chai from 'chai';\nimport chaiHttp = require('chai-http');\n\nimport app from '../src/App';\n\nchai.use(chaiHttp);\n\nconst expect = chai.expect;\n\ndescribe('GET api/v1/heroes', () => {\n   it('Response with JSON array', () => {\n        return chai.request(app).get('/api/v1/heroes')\n   .then(res => {\n            expect(res.status).to.equal(200);\n            expect(res).to.be.json;\n            expect(res.body).to.be.an('array');\n            expect(res.body).to.have.length(5);\n        })\n    })\nit('It should include Wolverine', () => {\n    return chai.request(app).get('/app/v1/heroes')\n    .then(res => {\n            let Wolverine = res.body.find(hero => hero.name ===\"Wolverine\")\n            expect(Wolverine).to.exist;\n            expect(Wolverine).to.have.all.keys([\n                'id',\n                'name',\n                'aliases',\n                'gender',\n                'height',\n                'hair',\n                'eyes',\n                'powers'\n            ])\n        });\n    });\n});\n\n"]}