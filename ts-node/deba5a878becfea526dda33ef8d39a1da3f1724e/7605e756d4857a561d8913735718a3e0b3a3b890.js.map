{"version":3,"file":"/home/plamen/Trainings/ExpressAndTypescript/src/routes/HeroRouter.ts","sources":["/home/plamen/Trainings/ExpressAndTypescript/src/routes/HeroRouter.ts"],"names":[],"mappings":";AAAA,0BAAsD,SACtD,CAAC,CAD8D;AAC/D,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AAErC;IAGI;;;QAGI;IAEJ;QACI,IAAI,CAAC,MAAM,GAAG,gBAAM,EAAE,CAAC;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED;;;QAGI;IAEG,MAAM,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IACD;;QAEI;IACG,MAAM,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,CAAC;QAClD,EAAE,CAAA,CAAC,IAAI,CAAC,CAAA,CAAC;YACL,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;iBACd,IAAI,CAAC;gBACE,OAAO,EAAC,SAAS;gBACjB,MAAM,EAAC,GAAG,CAAC,MAAM;gBACjB,IAAI;aACP,CAAC,CAAC;QACX,CAAC;QACD,IAAI,CAAA,CAAC;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;iBACd,IAAI,CAAC;gBACE,OAAO,EAAE,iCAAiC;gBAC1C,MAAM,EAAE,GAAG,CAAC,MAAM;aACrB,CAAC,CAAA;QACV,CAAC;IACL,CAAC;IAED;;;QAGI;IAEJ,IAAI;QACA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;AAEL,CAAC;AAtDY,kBAAU,aAsDtB,CAAA;AAED,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AACpC,UAAU,CAAC,IAAI,EAAE,CAAC;AAElB;kBAAe,UAAU,CAAC,MAAM,CAAA","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express'\nconst Heroes = require('../../data');\n\nexport class HeroRouter {\n    router: Router;\n\n    /*\n    * Initialize the HeroRouter\n    *\n    * */\n\n    constructor() {\n        this.router = Router();\n        this.init();\n    }\n\n    /*\n    * Get all heroes\n    *\n    * */\n\n    public getAll(req: Request, res: Response, next: NextFunction){\n        res.send(Heroes);\n    }\n    /*\n    * GET one hero by id\n    * */\n    public getOne(req: Request, res: Response, next: NextFunction){\n        let query = parseInt(req.params.id);\n        let hero = Heroes.find(hero => hero.id === query);\n        if(hero){\n            res.status(200)\n            .send({\n                    message:'Success',\n                    status:res.status,\n                    hero\n                });\n        }\n        else{\n            res.status(400)\n            .send({\n                    message: 'No hero found with the given id',\n                    status: res.status\n                })\n        }\n    }\n\n    /*\n    * Take each handler, and attach to one of the Express.Router's\n    * endpoints\n    * */\n\n    init() {\n        this.router.get('/', this.getAll);\n        this.router.get('/:id', this.getOne);\n    }\n\n}\n\nconst heroRoutes = new HeroRouter();\nheroRoutes.init();\n\nexport default heroRoutes.router"]}